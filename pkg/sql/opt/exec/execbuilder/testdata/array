# LogicTest: local

# Add x to PRIMARY KEY once #50659 is fixed.
statement ok
CREATE TABLE t (x INT[])

# Test some scans of constrained spans on arrays.

query TTT
EXPLAIN SELECT x FROM t WHERE x = ARRAY[1,4,6]
----
·     distribution  local
·     vectorized    true
scan  ·             ·
·     table         t@primary
·     spans         FULL SCAN
·     filter        x = ARRAY[1,4,6]

query TTT
EXPLAIN SELECT x FROM t WHERE x < ARRAY[1, 4, 3]
----
·     distribution  local
·     vectorized    true
scan  ·             ·
·     table         t@primary
·     spans         FULL SCAN
·     filter        x < ARRAY[1,4,3]

query TTT
EXPLAIN SELECT x FROM t WHERE x > ARRAY [1, NULL]
----
·     distribution  local
·     vectorized    true
scan  ·             ·
·     table         t@primary
·     spans         FULL SCAN
·     filter        x > ARRAY[1,NULL]

query TTT
EXPLAIN SELECT x FROM t WHERE x > ARRAY[1, 3] AND x < ARRAY[1, 4, 10] ORDER BY x
----
·          distribution  local
·          vectorized    true
sort       ·             ·
 │         order         +x
 └── scan  ·             ·
·          table         t@primary
·          spans         FULL SCAN
·          filter        (x > ARRAY[1,3]) AND (x < ARRAY[1,4,10])

query TTT
EXPLAIN SELECT x FROM t WHERE x > ARRAY[1, 3] AND x < ARRAY[1, 4, 10] ORDER BY x DESC
----
·          distribution  local
·          vectorized    true
sort       ·             ·
 │         order         -x
 └── scan  ·             ·
·          table         t@primary
·          spans         FULL SCAN
·          filter        (x > ARRAY[1,3]) AND (x < ARRAY[1,4,10])

statement ok
DROP TABLE t

# Add multicolumn INDEX i (x, y, z) once #50659 is fixed.
statement ok
CREATE TABLE t (x INT, y INT[], z INT)

query TTT
EXPLAIN SELECT x, y, z FROM t WHERE x = 2 AND y < ARRAY[10] ORDER BY y
----
·          distribution  local
·          vectorized    true
sort       ·             ·
 │         order         +y
 └── scan  ·             ·
·          table         t@primary
·          spans         FULL SCAN
·          filter        (x = 2) AND (y < ARRAY[10])

# Test span generation on interleaved tables.
# Add x to parent PRIMARY KEY (x, y) once #50659 is fixed.
# Add x to child PRIMARY KEY (x, y, z) once #50659 is fixed.
# Add INTERLEAVE IN PARENT parent (x, y) once #50659 is fixed.
statement ok
CREATE TABLE parent (x INT, y INT[], PRIMARY KEY (x), FAMILY (x, y));
CREATE TABLE child (x INT, y INT[], z INT[], PRIMARY KEY (x), FAMILY (x, y, z)) INTERLEAVE IN PARENT parent (x)

query TTT
EXPLAIN SELECT x, y FROM parent WHERE x > 1 AND y > ARRAY[1, NULL]
----
·     distribution  local
·     vectorized    true
scan  ·             ·
·     table         parent@primary
·     spans         /2-
·     filter        y > ARRAY[1,NULL]

query TTT
EXPLAIN SELECT y FROM parent WHERE x = 1 AND y = ARRAY[NULL, NULL]
----
·          distribution  local
·          vectorized    true
render     ·             ·
 └── scan  ·             ·
·          table         parent@primary
·          spans         /1-/1/#
·          filter        y = ARRAY[NULL,NULL]

query TTT
EXPLAIN SELECT z FROM child WHERE x = 1 AND y = ARRAY[NULL, NULL]
----
·          distribution  local
·          vectorized    true
render     ·             ·
 └── scan  ·             ·
·          table         child@primary
·          spans         /1/#/56/1-/1/#/56/1/#
·          filter        y = ARRAY[NULL,NULL]
